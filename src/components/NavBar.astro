---
import Logo from "../assets/svgs/logo.svg";
import Hamburger from "../assets/svgs/hamburger.svg";
import Close from "../assets/svgs/close.svg";

const currentPath = Astro.url.pathname;
const links = [
  { href: "/", label: "Home" },
  { href: "/about", label: "About Us" },
  { href: "/services", label: "Services" },
  { href: "/partners", label: "Partner With Us" },
  { href: "/mentors", label: "Mentors" },
  { href: "/superhero", label: "SuperHero Test" },
  { href: "/pricing", label: "Pricing" },
];
---

<!-- Header -->
<header
  class="w-full h-fit py-[18px] flex justify-between items-center relative bg-white px-[24px] md:px-[48px]"
>
  <!-- Logo -->
  <div class="size-[45px] md:size-[50px]">
    <Logo class="size-full object-cover" />
  </div>

  <!-- Desktop Navigation -->
  <nav
    class="hidden lg:flex  font-rd text-[14.5px]"
  >
    {
      links.map((link) => (
        <a
          href={link.href}
          class={`text-black/50 hover:text-black/100 font-medium px-[14px] py-[8px] transition-colors ${
            currentPath === link.href ? "text-black/100 font-semibold" : ""
          }`}
        >
          {link.label}
        </a>
      ))
    }
  </nav>

  <!-- CTA Buttons (desktop only) -->
  <div class="hidden lg:flex gap-[12px] items-center text-[14.5px]">
    <a
      href=""
      class="btn px-[16px] py-[10px] bg-primaryy hover:bg-black hover:text-white transition-colors"
      >Join Our Mentorship Platform</a
    >
    <a
      href="/contact"
      class="btn px-[16px] py-[10px] bg-secondaryy text-white hover:bg-black transition-colors"
      >Contact Us</a
    >
  </div>

  <!-- Hamburger Menu Button (mobile only) -->
  <button id="menu-btn" class="lg:hidden size-[32px]">
    <Hamburger class="size-full" />
  </button>
</header>

<!-- Mobile Navigation -->
<nav
  id="mobile-nav"
  class="h-dvh w-full fixed top-0 left-0 py-[18px] px-[24px] md:px-[48px] z-50 hidden lg:hidden transition-all duration-300 opacity-0 bg-white"
>
  <div class="flex flex-col justify-between w-full h-full">
    <!-- Logo & Close Button -->
    <div
      class="w-full h-fit flex justify-between items-center"
    >
      <!-- Logo -->
      <div class="size-[45px] md:size-[50px]">
        <Logo class="size-full object-cover" />
      </div>

      <!-- Close Button -->
      <button id="close-btn" class="size-[32px]">
        <Close class="size-full" />
      </button>
    </div>

    <!-- Links -->
    <div class="flex flex-col gap-[16px] font-rd text-[14.5px]">
      {
        links.map((link) => (
          <a
            href={link.href}
            class={`text-black/70 hover:text-black/100 font-medium py-[8px]  text-center  ${
              currentPath === link.href ? "text-black font-semibold" : ""
            }`}
          >
            {link.label}
          </a>
        ))
      }
    </div>

    <!-- CTA Buttons -->
    <div class="flex flex-col gap-3 mt-3">
      <a
        href="/mentorship"
        class="btn px-[16px] py-[10px] bg-primaryy hover:bg-black hover:text-white text-center transition-colors"
        >Join Our Mentorship Platform</a
      >
      <a
        href="/contact"
        class="btn px-[16px] py-[10px] bg-secondaryy text-white hover:bg-black text-center transition-colors"
        >Contact Us</a
      >
    </div>
  </div>
</nav>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const hamburger = document.getElementById("menu-btn");
    const close = document.getElementById("close-btn");
    const mobileNav = document.getElementById("mobile-nav");

    // Open mobile nav
    hamburger.addEventListener("click", () => {
      // Step 1: Make sure it's visible
      mobileNav.classList.remove("hidden");
      mobileNav.classList.add("flex");

      // Step 2: Set initial state before animation
      mobileNav.classList.remove("opacity-100");
      mobileNav.classList.add("opacity-0");

      // Step 3: Force reflow to let browser apply the state
      void mobileNav.offsetWidth;

      // Step 4: Animate to visible
      mobileNav.classList.remove("opacity-0");
      mobileNav.classList.add("opacity-100");

      document.body.classList.add("no-scroll");
    });

    // Close mobile nav
    close.addEventListener("click", () => {
      console.log("clicked");
      // Start fade-out
      mobileNav.classList.remove("opacity-100");
      mobileNav.classList.add("opacity-0");

      // After transition ends â†’ hide completely
      mobileNav.addEventListener(
        "transitionend",
        () => {
          mobileNav.classList.add("hidden");
          mobileNav.classList.remove("flex");
          document.body.classList.remove("no-scroll");
        },
        { once: true }
      );
    });

    // Auto-close mobile nav when resizing to desktop
    const BREAKPOINT = 1024;
    window.addEventListener("resize", () => {
      if (window.innerWidth >= BREAKPOINT) {
        mobileNav.classList.add("hidden");
        mobileNav.classList.remove("flex", "opacity-100", "opacity-0");
        document.body.classList.remove("no-scroll");
      }
    });
  });
</script>
